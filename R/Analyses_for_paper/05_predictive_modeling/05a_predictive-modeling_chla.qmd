---
title: "Predictive Modeling - chl a trends"
format: 
  html:
    toc: true
    code-fold: true
warning: false
message: false
error: true
embed-resources: true

---

# Setup  

```{r}
library(tidyverse)
library(MuMIn)
library(doParallel)
library(glmmTMB)
library(tictoc)
library(vegan)
library(ggfortify)
```

```{r}
source(here::here("R", "Analyses_for_paper",
                  "05_predictive_modeling",
                  "050_setup.R"))
```


Natural-log transforming nutrient medians and turbidity, to ensure linearity of effects and stabilize variance.  

Centering and standardizing (1SD) predictors to make sure model converges and aid in relative interpretation (comparing effect sizes among variables on very different scales); once we have a top model set/averaged model, we can back-transform and interpret slopes in their raw units.  



```{r}
# pick the specific predictors we've agreed on
# center and scale all but response 
dat_chl <- dat_all |> 
  select(reserve,
         chla_trend,
         # lat/temp/par/domgl PCA
         tpld_PC1,
         # wq medians
         spcond_median, turb_median.log,
         # wq trends
         temp_trend, spcond_trend, turb_trend,
         # nut medians
         chla_median.log, nh4_median.log, no23_median.log, po4_median.log,
         # nut trends
         nh4f_trend, no23f_trend, po4f_trend,
         # met
         precp_median, precp_trend, dailyPAR_trend) |> 
  mutate(across(tpld_PC1:last_col(),
                function(x) as.vector(scale(x))))

formula_chl <- paste0("chla_trend ~ ", paste(names(dat_chl[3:ncol(dat_chl)]), collapse = " + "), " + (1|reserve)")
```


# Models     

## Create and evaluate global models    

### Chl  

```{r}
mod_chl <- glmmTMB(as.formula(formula_chl),
                    data = dat_chl)
performance::check_singularity(mod_chl)
r.squaredGLMM(mod_chl)
summary(mod_chl)
```

Marginal r2 = 0.286  
Cond'l r2 = 0.686  


#### Evaluate diagnostics  

```{r}
# assign model at top so this code chunk can be reused
mod = mod_chl


# this code shows a variety of plots, which is nice
performance::check_model(mod)
# VIFs look fine


# we'll look at other plots ourselves


# pull out pearson residuals
resids <- resid(mod, type = "pearson")

# pull out predictor data frame
preds_df <- mod$frame[2:ncol(mod$frame)]

# set up a 4-plot layout
par(mfrow = c(2, 2))

# plot the main diagnostic graphs
plot(resids ~ fitted.values(mod),
     xlab = "fitted",
     ylab = "residual")
abline(h = 0, col = "red3")
hist(resids, breaks = 20)
qqnorm(resids)
qqline(resids, col = "gray60", lty = 2)
boxplot(resids ~ preds_df$reserve)

# set up a bigger plot layout
par(mfrow = c(4, 5))

# plot residuals against every predictor
for(i in 1:ncol(preds_df)){
  plot(resids ~ preds_df[[i]],
       xlab = names(preds_df)[i],
       ylab = "pearson residuals")
  abline(h = 0, col = "red3")
}

# go back to normal plot layout
par(mfrow = c(1, 1))

```

```{r}
# cleanup a bit
rm(dat_all, mod, op, pca_tpl2, preds_df, preds_doLT2)
```

