---
title: "Predictive Modeling - trends in DO<2"
format: 
  html:
    toc: true
    code-fold: true
warning: false
message: false
error: true
embed-resources: true

---

# Setup  

```{r}
library(tidyverse)
library(MuMIn)
library(doParallel)
library(glmmTMB)
library(tictoc)
library(vegan)
library(ggfortify)
library(performance)
```

```{r}
source(here::here("R", "Analyses_for_paper",
                  "05_predictive_modeling",
                  "050_setup.R"))
```


Natural-log transforming nutrient medians and turbidity, to ensure linearity of effects and stabilize variance.  

Centering and standardizing (1SD) predictors to make sure model converges and aid in relative interpretation (comparing effect sizes among variables on very different scales); once we have a top model set/averaged model, we can back-transform and interpret slopes in their raw units.  

```{r}
dat_doLT2 <- dat_all |> 
  select(reserve,
         doLT2_trend = do_proportion_below2_trend,
         # lat/temp/par PCA
         tpld_PC1,
         # wq medians
         spcond_median, turb_median.log, domgl_median,
         # wq trends
         temp_trend, spcond_trend, turb_trend,
         # nut medians
         chla_median.log, nh4_median.log, no23_median.log, po4_median.log,
         # nut trends
         chla_trend, nh4f_trend, no23f_trend, po4f_trend,
         # met
         precp_median, precp_trend, dailyPAR_trend) |> 
  mutate(across(tpld_PC1:last_col(),
                function(x) as.vector(scale(x))))

formula_doLT2 <- paste0("doLT2_trend ~ ", paste(names(dat_doLT2[3:ncol(dat_doLT2)]), collapse = " + "), " + (1|reserve)")

formula_fixed_doLT2 <- paste0("doLT2_trend ~ ", paste(names(dat_doLT2[3:ncol(dat_doLT2)]), collapse = " + "))
```

# Models    

## Create and evaluate global models    


### DO < 2  

```{r}
mod_doLT2 <- glmmTMB(as.formula(formula_doLT2),
                    data = dat_doLT2)
performance::check_singularity(mod_doLT2)

# drop random factor due to singular fit
mod_doLT2 <- lm(as.formula(formula_fixed_doLT2),
                data = dat_doLT2)
performance::check_singularity(mod_doLT2)

r2(mod_doLT2)
summary(mod_doLT2)
```

#### Evaluate diagnostics  

```{r}
# assign model at top so this code chunk can be reused
mod = mod_doLT2

# this code shows a variety of plots, which is nice
performance::check_model(mod)

# I do not like the posterior predictive check for doLT2 at all
# there are a few moderate VIFs too
performance::check_collinearity(mod)
sort(car::vif(mod), decreasing = TRUE)
# temp and DO medians, no23 median. turb and po4 medians are around 4.


# we'll look at other plots ourselves

# pull out pearson residuals
resids <- resid(mod, type = "pearson")

op <- par()

# pull out predictor data frame
# THIS PART IS DIFFERENT FOR lm vs glmmTMB
preds_df <- mod$model[2:ncol(mod$model)]

# set up a 4-plot layout
par(mfrow = c(2, 2))

# plot the main diagnostic graphs
plot(resids ~ fitted.values(mod),
     xlab = "fitted",
     ylab = "residual")
abline(h = 0, col = "red3")
hist(resids, breaks = 20)
qqnorm(resids)
qqline(resids, col = "gray60", lty = 2)


# set up a bigger plot layout
par(mfrow = c(4, 5))

# plot residuals against every predictor
for(i in 1:ncol(preds_df)){
  plot(resids ~ preds_df[[i]],
       xlab = names(preds_df)[i],
       ylab = "pearson residuals")
  abline(h = 0, col = "red3")
}

# go back to normal plot layout
par(op)

```

