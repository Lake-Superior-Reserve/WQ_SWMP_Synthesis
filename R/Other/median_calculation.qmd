---
title: "WQ/NUT median calculations"
format: html
toc: true
toc-position: left
echo: true
code-fold: true
warning: false
message: false
error: true
---

```{r}
library(tidyverse)
library(NADA)
```

```{r}
load(here::here("Data", "QAQCd_monthly_byType",
                "SWMP_monthlyWQ.RData"))
load(here::here("Data", "QAQCd_monthly_byType",
                "SWMP_monthlyNUT.RData"))
stn_mdat <- read_csv(here::here("helper_files",
                                "sampling_stations.csv"))
```

## Station Information  

```{r}
# pull relevant station info for combining
# limit to wq stations because only using wq/nut combinations
stn_info <- stn_mdat |> 
  select(`Station Code`,
         `Station Name`,
         Latitude,
         Longitude,
         State,
         `Reserve Name`,
         "Reserve Code" = `NERR Site ID`) |> 
  mutate(State = toupper(State),
         `Reserve Code` = toupper(`Reserve Code`),
         Station = substr(`Station Code`, 1, 5),
         Longitude = as.numeric(Longitude)) |> 
  filter(str_ends(`Station Code`, "wq")) |> 
  relocate(Station) |> 
  select(-`Station Code`)
```

## WQ Medians  

```{r}
wq_meds <- wq |> 
  mutate(station = substr(station, 1, 5)) |> 
  summarize(.by = station,
            yr_start_wq = min(year, na.rm = TRUE),
            yr_end_wq = max(year, na.rm = TRUE),
            across(c(temp_median, 
                     spcond_median,
                     sal_median,
                     do_mgl_median,
                     ph_median,
                     turb_median),
                   function(x) median(x, na.rm = TRUE)))
```



## NUT Medians  

As of 5/3/24, two problems with these:  

1.  They don't use methods to account for censoring - this is literally just the middle value. Censored values were retained, however.   
2.  NO23 calculated value weirdness - primarily we think this only affects HUD and OWC but need to investigate further.  

```{r}
# nut_meds <- nut |> 
#   mutate(station = substr(station, 1, 5)) |> 
#   summarize(.by = station,
#             yr_start_nut = min(year, na.rm = TRUE),
#             yr_end_nut = max(year, na.rm = TRUE),
#             across(c(chla_n, 
#                      nh4f,
#                      no23f,
#                      po4f),
#                    function(x) median(x, na.rm = TRUE)))
```

### Deal with censoring  


Using the NADA package, we have to remove NAs, but can calculate the median, mean and sd in all the ways. The NADA functions compute the mean slightly too high, so use EnvStats for mean.  

NADA can handle it when there aren't any censored values (e.g. NH4 at acebbnut) but the MLE estimated median is off (apparently this is due to how MLE calculates things).

Below is a function I wrote where I take the nutrient and its censoring column, remove NAs, and calculate the thing.  

It uses the value of the ROS-calculated median (robust Regression on Order Statistics). MLE or Kaplan-Meier values could also be used here, but Helsel calls ROS the most flexible of the methods.  

NOTE I am still dealing with exact 0s in the dataset as I'm generating this file for Carl and Dave, so in the function I am replacing any 0 with 0.01 and making sure the censoring column says 'TRUE'. (ROS won't work with exact 0s in the datset.)  

```{r}
censMed_fun <- function(df, nut, cens){
  tmp <- data.frame("param" = df[[nut]],
                    "censoring" = df[[cens]]) 
  
  # if all values are NA, return NA
  if(sum(is.na(tmp$param)) == nrow(tmp)) return(NA)
  
  # if there aren't at least 10 values, return NA
  if(nrow(tmp) < 10) return(NA)
  
  # otherwise calculate the median
  tmp <- tmp |> 
    mutate(censoring = as.logical(censoring),
           censoring = case_when(param == 0 ~ TRUE,
                                 .default = censoring),
           param = case_when(param == 0 ~ 0.01,
                             .default = param)) |> 
    na.omit()
  # median(cenfit(tmp$param, tmp$censoring))  # kaplan-meier
  median(cenros(tmp$param, tmp$censoring))  # ROS
  #  censtats(tmp$param, tmp$censoring)  # all 3 methods, for comparison - also tells % censored
}


# test <- filter(nut, station == "gndbhnut")  # about 53% of po4 values are censored
# test <- filter(nut, station == "gndhsnut")  # po4 'dropped censored values that exceeded highest non censored value' - still comes out very close to others
# test <- filter(nut, station == "gndblnut")  # >80% of no23 values are censored - median more similar to MLE, but not far off from K-M
# test <- filter(nut, station == "acebbnut")  # has no censored values for nh4 or chl
# test <- filter(nut, station == "owcbrnut")  # has exact 0s
# test <- filter(nut, station == "tjrhpnut")  # only one row in data frame
# censMed_fun(test, "nh4f", "nh4f_cens")
# censMed_fun(test, "no23f", "no23f_cens")
# censMed_fun(test, "po4f", "po4f_cens")
# censMed_fun(test, "chla_n", "chla_n_cens")


```


```{r}
nut_meds_cens <- nut |> 
  mutate(station = substr(station, 1, 5)) |> 
  summarize(.by = station,
            yr_start_nut = min(year, na.rm = TRUE),
            yr_end_nut = max(year, na.rm = TRUE),
            chla = censMed_fun(.data, nut = "chla_n", cens = "chla_n_cens"),
            nh4f = censMed_fun(.data, nut = "nh4f", cens = "nh4f_cens"),
            no23f = censMed_fun(.data, nut = "no23f", cens = "no23f_cens"),
            po4f = censMed_fun(.data, nut = "po4f", cens = "po4f_cens"))

# censMed_fun(nut, "po4f", "po4f_cens")
```



## combine and write out  

Join in way that keeps only stations that are in both WQ and NUT data frames.  

```{r}
all_meds <- inner_join(wq_meds,
                       nut_meds_cens,
                       by = "station") |> 
  relocate(c(yr_start_nut, yr_end_nut),
           .after = yr_end_wq)
```

Now join all the station info too.  

```{r}
dat_out <- left_join(all_meds, 
                     stn_info,
                     by = c("station" = "Station")) |> 
  select(station, `Station Name`,
         `Reserve Code`, `Reserve Name`,
         State,
         Latitude, Longitude,
         everything())
```

```{r}
write.csv(dat_out,
          here::here("Outputs",
                     "WQ-NUT_overallMedians_NOTfullyQAQCd.csv"))
```

