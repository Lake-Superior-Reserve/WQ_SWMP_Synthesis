---
title: "NO3:NO23"
format: 
  html:
    code-fold: true
    toc: true
embed-resources: true
warning: false
message: false
error: true
---

Because HUD doesn't measure NO2, and for decades only measured NO3, and we're using it as a proxy for NO23 at their reserve - here we'll compare NO3 to NO23 for other reserves as well.  

```{r}
library(tidyverse)
load(here::here("Data", "QAQCd_monthly_byType", "SWMP_monthlyNUT.RData"))
```

Subset to only the params we care about. Keep only no23 values above 0 (some qaqc issues; this also gets rid of NA in no23). Keep only rows where no2 and no3 are either NA or above 0.  Keep only rows where NO2 and NO3 aren't BOTH NA. (NO3 can be NA if NO2 was censored, due to CDMO protocols - and we'll want to fill it in ourselves in those cases.)

```{r}
nut_sub <- nut |> 
  select(station, year, month,
         no2f, no3f, no23f,
         no2f_cens, no3f_cens, no23f_cens) |> 
  filter(no23f > 0,
         is.na(no3f) | no3f > 0,
         is.na(no2f) | no2f > 0,
         is.na(no2f) + is.na(no3f) != 2
  ) |> 
  mutate(censoring = case_when(no3f_cens + no23f_cens == 2 ~ "both",
                               no3f_cens == 1 ~ "NO3 only",
                               no23f_cens == 1 ~ "NO23 only",
                               .default = "neither"))
```

```{r}
plot(log10(no23f) ~ log10(no3f), data = nut_sub)
abline(a = 0, b = 1, col = "red")

ggplot(nut_sub) +
  geom_point(aes(x = no3f,
                 y = no23f,
                 col = censoring),
             size = 3,
             alpha = 0.3) +
  scale_x_log10() +
  scale_y_log10() +
  geom_abline(intercept = 0,
              slope = 1,
              col = "red")

ggplot(nut_sub) +
  geom_histogram(aes(x = no3f/no23f),
                 binwidth = 0.05,
                 col = "gray40",
                 fill = "cadetblue3") +
  scale_x_continuous(limits = c(0, 2)) +
  geom_vline(xintercept = 0.9,
             col = "red3") +
  labs(subtitle = "red line at 0.9")
```


Need to deal with - most stations calculate NO3 as NO23-NO2. So NO3 can be interval censored, when NO2 is censored.  

Which means the ratio will be between something and 1.  

If NO23 itself is censored, we don't really know.  

Let me play with what we've got. When NO3 is NA, I'm inserting the value for NO23 - NO2 and flagging it as censored. Note this will bias estimates of the ratio a little bit - all of those ratios could in fact be 1!  

```{r}
nut2 <- nut_sub |> 
  mutate(no3f_cens = case_when(is.na(no3f) ~ 1,
                               .default = no3f_cens),
         no3f = case_when(is.na(no3f) ~ no23f - no2f,
                          .default = no3f),
         ratio = no3f/no23f,
         censoring = case_when(no3f_cens + no23f_cens == 2 ~ "both",
                               no3f_cens == 1 ~ "NO3 only",
                               no23f_cens == 1 ~ "NO23 only",
                               .default = "neither"),
         reserve = substr(station, 1, 3))
```

```{r}
ggplot(nut2) +
  geom_point(aes(x = no3f,
                 y = no23f,
                 col = censoring),
             size = 3,
             alpha = 0.3) +
  scale_x_log10() +
  scale_y_log10() +
  geom_abline(intercept = 0,
              slope = 1,
              col = "red") +
  geom_vline(xintercept = 0.2,
             col = "blue") +
  labs(subtitle = "blue line at 0.2; seems to be a break point")

ggplot(nut2) +
  geom_point(aes(x = no3f,
                 y = no23f,
                 col = censoring),
             size = 3,
             alpha = 0.3) +
  coord_cartesian(xlim = c(0.01, 1),
                  ylim = c(0.01, 1)) +
  geom_abline(intercept = 0,
              slope = 1,
              col = "red") +
  geom_vline(xintercept = 0.2,
             col = "blue") +
  labs(subtitle = "same as above but without log-axes; \n blue line at 0.2; seems to be a break point")

ggplot(nut2) +
  geom_histogram(aes(x = no3f/no23f),
                 binwidth = 0.05,
                 col = "gray40",
                 fill = "cadetblue3") +
  coord_cartesian(xlim = c(0, 2)) +
  geom_vline(xintercept = 0.9,
             col = "red3") +
  labs(subtitle = "red line at 0.9")
```

Quantiles of ratios, using (NO23-NO2) as NO3 even when NO2 was censored.  

```{r}
quantile(nut2$ratio, probs = c(0.25, 0.5, 0.75, 0.9, 0.95, 1))
plot(ecdf(nut2$ratio))
```

Half of them are above 0.92. 75% are above 0.7.  

How many are above 0.9 and less than 1?  

```{r}
sum(nut2$ratio > 0.9) / nrow(nut2)
```


Let's filter to the range of values in question.... it's mostly OWC with values that are even above 2, but some from pdb and del. So filtering to NO23 < 3, and will use reserve as a random effect in a model.  

```{r}
nut3 <- nut2 |> 
  filter(no23f < 3)

ggplot(nut3) +
  geom_point(aes(x = no3f,
                 y = no23f,
                 col = censoring),
             size = 3,
             alpha = 0.3) +
  scale_x_log10() +
  scale_y_log10() +
  geom_abline(intercept = 0,
              slope = 1,
              col = "red")

test <- glmmTMB::glmmTMB(no23f ~ no3f + (1|reserve), data = nut3)
summary(test)
confint(test, level = 0.99)

predict(test, newdata = data.frame(no3f = c(1.74, 0.41, 0.8105, 0.314, 0.32)),
        re.form = ~0)
```

Accounting for reserve, point estimate for slope is essentially 1 (99% CI 0.998 - 1.002). Estimate for intercept is 0.0064 (99% CI 0.0046 - 0.0082).  

For median value, HUD's are in the neighborhood of .3 - 1.7. This offset for the intercept isn't enough to make any kind of difference at that scale - it's a rounding error.  

And this didn't even account for censoring, hooray

How many are above 0.9 and less than 1 in this range?  

```{r}
sum(nut3$ratio > 0.9) / nrow(nut3)
```

Same amount - 52%.  


What about specifically in the range that HUD seems to be in, around 0.1 - 2?  

```{r}
nut4 <- nut2 |> 
  filter(no23f < 2,
         no23f > 0.1)

ggplot(nut4) +
  geom_point(aes(x = no3f,
                 y = no23f,
                 col = censoring),
             size = 3,
             alpha = 0.3) +
  # scale_x_log10() +
  # scale_y_log10() +
  geom_abline(intercept = 0,
              slope = 1,
              col = "red")

test2 <- glmmTMB::glmmTMB(no23f ~ no3f + (1|reserve), data = nut4)
summary(test2)
confint(test2, level = 0.99)
```

Interesting; slightly higher intercept and slightly lower slope.

# Different substitution for censoring  

Split the difference - average of NO23 and (NO23-NO2).  

```{r}
nut2 <- nut_sub |> 
  mutate(no3f_cens = case_when(is.na(no3f) ~ 1,
                               .default = no3f_cens),
         no3f = case_when(is.na(no3f) ~ (no23f - (0.5*no2f)),
                          .default = no3f),
         ratio = no3f/no23f,
         censoring = case_when(no3f_cens + no23f_cens == 2 ~ "both",
                               no3f_cens == 1 ~ "NO3 only",
                               no23f_cens == 1 ~ "NO23 only",
                               .default = "neither"),
         reserve = substr(station, 1, 3))
```

```{r}
ggplot(nut2) +
  geom_point(aes(x = no3f,
                 y = no23f,
                 col = censoring),
             size = 3,
             alpha = 0.3) +
  scale_x_log10() +
  scale_y_log10() +
  geom_abline(intercept = 0,
              slope = 1,
              col = "red")

ggplot(nut2) +
  geom_histogram(aes(x = no3f/no23f),
                 binwidth = 0.05,
                 col = "gray40",
                 fill = "cadetblue3") +
  coord_cartesian(xlim = c(0, 1.5)) +
  geom_vline(xintercept = 0.9,
             col = "red3")
```

```{r}
quantile(nut2$ratio, probs = c(0.25, 0.5, 0.75, 0.9, 0.95, 1))
plot(ecdf(nut2$ratio))
```

Half of them are above 0.93. 75% are above 0.8.  

How many are above 0.9 and less than 1?  

```{r}
sum(nut2$ratio > 0.9) / nrow(nut2)
```


Let's filter to the range of values in question.... it's mostly OWC with values that are even above 2, but some from pdb and del. So filtering to NO23 < 3, and will use reserve as a random effect in a model.  

```{r}
nut3 <- nut2 |> 
  filter(no23f < 3)

p <- ggplot(nut3) +
  geom_point(aes(x = no3f,
                 y = no23f,
                 col = censoring),
             size = 3,
             alpha = 0.3) +
  geom_abline(intercept = 0,
              slope = 1,
              col = "red")

p +
  coord_cartesian(xlim = c(0, 2),
                  ylim = c(0, 2)) 


p +
  scale_x_log10() +
  scale_y_log10() +
  geom_abline(intercept = 0.006, slope = 1, col = "blue")


test <- glmmTMB::glmmTMB(no23f ~ no3f + (1|reserve), data = nut3)
summary(test)
confint(test, level = 0.99)

predict(test, newdata = data.frame(no3f = c(1.74, 0.41, 0.8105, 0.314, 0.32)),
        re.form = ~0)
```

Slope and intercept almost exactly the same; intercept is a little lower. Essentially we're talking about adding 0.006 to these.   

How many are above 0.9 and less than 1 in this range?  

```{r}
sum(nut3$ratio > 0.9) / nrow(nut3)
```

A few more - 56%.   


